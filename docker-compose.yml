

services:
  # Ana Flask uygulaması
  web:
    build: .
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - DATABASE_URL=postgresql://dev_user:dev_password@postgres:5432/security_scanner_dev
      - SECRET_KEY=development-secret-key
    volumes:
      - .:/app
      - ./data:/app/data
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      zap:
        condition: service_started

  # PostgreSQL Veritabanı (Development için)
  postgres:
    image: postgres:15-alpine
    container_name: dev_postgres
    environment:
      POSTGRES_DB: security_scanner_dev
      POSTGRES_USER: dev_user
      POSTGRES_PASSWORD: dev_password
      POSTGRES_INITDB_ARGS: "--auth-host=md5"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dev_user -d security_scanner_dev"]
      interval: 5s
      timeout: 3s
      retries: 10
    restart: unless-stopped

  # Redis (Celery için - gelecekte)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # OWASP ZAP (güvenlik taraması için)
  zap:
    image: zaproxy/zap-stable
    user: root
    volumes:
      - ./zap-reports:/zap/wrk
    command: >
      bash -c "
      zap.sh -daemon 
      -host 0.0.0.0 
      -port 8080 
      -config api.addrs.addr.name=.* 
      -config api.addrs.addr.regex=true 
      -config api.disablekey=true
      -config api.incerrordetails=true
      -config proxy.disablekey=true
      "
    ports:
      - "8080:8080"
    environment:
      - ZAP_PROXY_PORT=8080

volumes:
  postgres_dev_data:
  redis_data: 